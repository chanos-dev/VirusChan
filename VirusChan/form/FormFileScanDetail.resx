<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>